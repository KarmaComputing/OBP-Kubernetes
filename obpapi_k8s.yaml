apiVersion: v1
kind: Secret
metadata:
    name: postgres-credentials
type: Opaque
data:
    postgres_user: cG9zdGdyZXM= #postgres
    postgres_password: cGFzc3dvcmQ= #password
    postgres_db_name: cG9zdGdyZXM= #postgres
    postgres_data: L3Zhci9saWIvcG9zdGdyZXNxbC9kYXRhL3BnZGF0YQ== # /var/lib/postgresql/data/pgdata
    jdbc_driver: b3JnLnBvc3RncmVzcWwuRHJpdmVy # org.postgresql.Driver
    jdbc_url: amRiYzpwb3N0Z3Jlc3FsOi8vcG9zdGdyZXMtc2VydmljZTo1NDMyL3Bvc3RncmVzP3VzZXI9cG9zdGdyZXMmcGFzc3dvcmQ9cGFzc3dvcmQ= # jdbc:postgresql://postgres-service:5432/postgres?user=postgres&password=password
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata: 
    name: postgres-volume-claim
spec:
    accessModes:
        - ReadWriteOnce
    volumeMode: Filesystem
    resources:
        requests:
            storage: 5Gi
    selector:
       matchLabels: 
            release: "stable"
---
apiVersion: v1
kind: Service
metadata:
    name: obpapi-service
spec:
    selector:
        app: obpapi
    ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: obp-deployment
    labels:
        app: obpapi
spec:
    replicas: 1
    selector:
        matchLabels:
            app: obpapi
    template:
        metadata:
            labels:
                app: obpapi
        spec:
            containers:
            - name: obpapi
              image: chrisjsimpson/obpapi-kube # docker build -t obpapi-kube .
              env:
                - name: DB_DRIVER
                  valueFrom: 
                    secretKeyRef: 
                     name: postgres-credentials
                     key: jdbc_driver
                - name: DB_URL
                  valueFrom: 
                    secretKeyRef: 
                     name: postgres-credentials
                     key: jdbc_url
              ports:
              - containerPort: 8080
                name: http
              - containerPort: 5432
                name: postgres
---
apiVersion: v1
kind: Service
metadata:
    name: postgres-service
spec:
    selector:
        app: postgres
    ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: postgres
    labels:
        app: postgres
spec:
    replicas: 1
    selector:
        matchLabels:
            app: postgres
    template:
        metadata:
            labels:
                app: postgres
        spec:
            containers:
            - name: postgres
              image: postgres:11.1-alpine
              env: 
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                     name: postgres-credentials
                     key: postgres_user
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef: 
                     name: postgres-credentials
                     key: postgres_password
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef: 
                     name: postgres-credentials
                     key: postgres_db_name
                - name: PGDATA
                  valueFrom:
                    secretKeyRef: 
                     name: postgres-credentials
                     key: postgres_data
              volumeMounts:
              - name: postgres-volume
                mountPath: "/var/lib/postgresql/data"
              ports:
              - containerPort: 5432
            volumes:
                - name: postgres-volume
                  persistentVolumeClaim:
                    claimName: postgres-volume-claim
